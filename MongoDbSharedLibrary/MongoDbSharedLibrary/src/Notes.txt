# Publishing locally and using the NuGet package in our project without pushing it 
to a remote NuGet repository.

Steps to Locally Publish and Use a NuGet Package

1. Pack the Library as a NuGet Package
    Run the following command in the MongoDbSharedLibrary project folder from where you see .csproj file:
        => **********-MacBook-Air MongoDbSharedLibrary % 
        => dotnet pack --output ../../local-nuget-package
        (This will create a .nupkg file inside the local-nuget-package directory.)
2. Add the Local NuGet Source
    In the project where you want to use the library, run:
        => dotnet nuget add source ./local-nuget-package --name LocalNuGet
        (This tells .NET to look for NuGet packages in the local-nuget-package directory.)
3. Install the NuGet Package Locally
    In the project where you want to use it, add the package:
        => dotnet add package MongoDbSharedLibrary --source LocalNuGet
         dotnet add package MongoDbSharedLibrary --source ../../local-nuget-package --version 1.0.1
4. Verify Installation
    You can check if the package is installed by running:
        => dotnet list package
        
Now, you can use your MongoDbSharedLibrary like any other NuGet package without publishing it to NuGet.org.